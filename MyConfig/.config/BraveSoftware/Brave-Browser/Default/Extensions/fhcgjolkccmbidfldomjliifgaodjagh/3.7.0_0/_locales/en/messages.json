{
   "aboutText": {
      "description": "About",
      "message": "About"
   },
   "activeModeDelayText": {
      "description": "Delay Before Automatic Cleaning",
      "message": "Delay Before Automatic Cleaning"
   },
   "activeModeText": {
      "description": "Enable Automatic Cleaning",
      "message": "Enable Automatic Cleaning"
   },
   "activityLogSiteDataDomainsText": {
      "description": "Invoked cleanup of $siteData$ for: $domains$. Found in Activity Log Detailed Entries.",
      "message": "Invoked cleanup of $siteData$ for: $domains$",
      "placeholders": {
         "domains": {
            "content": "$2",
            "example": "example.com, github.com"
         },
         "siteData": {
            "content": "$1",
            "example": "Cache (translated version)"
         }
      }
   },
   "addNewExpressionNotification": {
      "description": "Adding $expression$ to list type $listType$ under cookie store $cookieStore$. Used in notification when right-click action was performed.",
      "message": "Adding $expression$ to list type $listType$ under cookie store $cookieStore$.",
      "placeholders": {
         "cookieStore": {
            "content": "$3",
            "example": "'default' -or- 'firefox-container-1 (Personal)'"
         },
         "expression": {
            "content": "$1",
            "example": "example.com"
         },
         "listType": {
            "content": "$2",
            "example": "WHITE"
         }
      }
   },
   "addNewExpressionNotificationFailed": {
      "description": "Could not fetch domain to add from where right-click was issued.",
      "message": "Could not fetch domain to add from where right-click was issued."
   },
   "addNewExpressionNotificationIgnore": {
      "description": "If expression already exists, this will be ignored. Used in notification when right-click action was performed.",
      "message": "If expression already exists, this will be ignored."
   },
   "autoDeleteDisabledText": {
      "description": "Auto-clean disabled",
      "message": "Auto-clean disabled"
   },
   "autoDeleteEnabledText": {
      "description": "Auto-clean enabled",
      "message": "Auto-clean enabled"
   },
   "browsingDataWarning": {
      "description": "WARNING: Upon enabling any of the following site data cleanup options, ALL existing data for that type will be cleared. Found in CAD Settings",
      "message": "WARNING: Upon enabling any of the following site data cleanup options, ALL existing data for that type will be cleared."
   },
   "cacheCleanupText": {
      "description": "Enable Cache Cleanup (Firefox 78+, Chrome 74+). Found in CAD Settings.",
      "message": "Enable Cache Cleanup (Firefox 78+, Chrome 74+)"
   },
   "cacheText": {
      "description": "Cache. Primarily used in notifications.",
      "message": "Cache"
   },
   "chromeDebugMode": {
      "description": "Ensure 'Developer Mode' is enabled, then click on 'background page' under Inspect View. This is shown if debug mode is enabled.",
      "message": "Ensure 'Developer Mode' is enabled, then click on 'background page' under Inspect View."
   },
   "cleanDiscardedText": {
      "description": "Enable Cleanup for Discarded/Unloaded Tabs. Found in Settings.",
      "message": "Enable Cleanup for Discarded/Unloaded Tabs"
   },
   "cleanExpiredCookiesText": {
      "description": "Clean All Expired Cookies. Found in Settings.",
      "message": "Clean All Expired Cookies"
   },
   "cleanIgnoringOpenTabsText": {
      "description": "Clean, include open tabs. Found in the additional cleanup options in the popup.",
      "message": "Clean, include open tabs"
   },
   "cleanText": {
      "description": "Clean",
      "message": "Clean"
   },
   "cleanupActionsBypass": {
      "description": "Warning - Actions below ignore settings! Found in the additional cleanup options in the popup.",
      "message": "Warning - Actions below ignore settings!"
   },
   "cleanupDomainChangeText": {
      "description": "Enable Cleanup on Domain Change",
      "message": "Enable Cleanup on Domain Change"
   },
   "cleanupLogText": {
      "description": "Cleanup Log",
      "message": "Cleanup Log"
   },
   "clearLogsText": {
      "description": "Clear Logs",
      "message": "Clear Logs"
   },
   "consoleDebugMode": {
      "description": "Click on the Console Tab. Found after enabling debug mode.",
      "message": "Click on the Console Tab"
   },
   "containerSiteDataWarning": {
      "description": "WARNING: Enabling Container Tabs with any of the additional browsing data cleanups above may cause unwanted side effects due to browser API limitations. Site data types, with the exception of cookies, will be cleared by hostname for ALL containers. Found in CAD Settings.",
      "message": "WARNING: Enabling Container Tabs with any of the additional browsing data cleanups above may cause unwanted side effects due to browser API limitations. Site data types, with the exception of cookies, will be cleared by hostname for ALL containers."
   },
   "contextMenusParentClean": {
      "description": "Manual Cleaning Menu. Shown on right-clicks of Page/Browser Action.",
      "message": "Manual Cleaning Menu"
   },
   "contextMenusParentExpression": {
      "description": "Add Domain/Expression Menu. Shown on right-clicks of Page/Link/Selection.",
      "message": "Add Domain/Expression Menu"
   },
   "contextMenusSelectedDomainLink": {
      "description": "For domain only of selected link. Shown in right-click menu.",
      "message": "For domain only of selected link"
   },
   "contextMenusSelectedDomainPage": {
      "description": "For domain only of selected page. Shown in right-click menu.",
      "message": "For domain only of selected page"
   },
   "contextMenusSelectedDomainText": {
      "description": "For domain only of selected text: $selected$. Shown in right-click menu.",
      "message": "For domain only of selected text: $selected$",
      "placeholders": {
         "selected": {
            "content": "$1",
            "example": "github.com"
         }
      }
   },
   "contextMenusSelectedSubdomainLink": {
      "description": "For all subdomains with domain of selected link. Shown in right-click menu.",
      "message": "For all subdomains with domain of selected link"
   },
   "contextMenusSelectedSubdomainPage": {
      "description": "For all subdomains with domain of selected page. Shown in right-click menu.",
      "message": "For all subdomains with domain of selected page"
   },
   "contextMenusSelectedSubdomainText": {
      "description": "For all subdomains with domain of selected text: $selected$. Shown in right-click menu.",
      "message": "For all subdomains with domain of selected text: $selected$",
      "placeholders": {
         "selected": {
            "content": "$1",
            "example": "github.com"
         }
      }
   },
   "contextualIdentitiesAutoRemoveText": {
      "description": "Enable Automatic Removal of Expression List when its Container is Removed. Only in Firefox.",
      "message": "Enable Automatic Removal of Expression List when its Container is Removed."
   },
   "contextualIdentitiesEnabledText": {
      "description": "Enable Support for Container Tabs. Currently only in Firefox.",
      "message": "Enable Support for Container Tabs"
   },
   "contributeText": {
      "description": "Contribute",
      "message": "Contribute"
   },
   "contributorsText": {
      "description": "Contributors",
      "message": "Contributors"
   },
   "cookieCleanUpOnStartText": {
      "description": "Clean Cookies and other Site Data from Open Tabs on Startup",
      "message": "Clean Cookies and other Site Data from Open Tabs on Startup"
   },
   "cookieCleanupIgnoreOpenTabsText": {
      "description": "Run cleanup now, include cookies from open tabs. This is shown on mouseover from the available dropdown buttons.",
      "message": "Run cleanup now, include domains from open tabs"
   },
   "cookieCleanupText": {
      "description": "Run cleanup now, exclude domains from open tabs. This is shown on mouseover on the button.",
      "message": "Run cleanup now, exclude domains from open tabs"
   },
   "cookiesText": {
      "description": "Cookies. Primarily used in popup via alternate clean action dropdown.",
      "message": "Cookies"
   },
   "copyDebugSettingText": {
      "description": "Your current settings.  If necessary, copy and paste this into the GitHub Issue.",
      "message": "Your current settings.  If necessary, copy and paste this into the GitHub Issue."
   },
   "copyDebugSystemText": {
      "description": "Your System Info.  Copy and paste into the relevant section of the GitHub Issue.",
      "message": "Your System Info.  Copy and paste into the relevant section of the GitHub Issue."
   },
   "copyFailedText": {
      "description": "Copy failed.  Try manually selecting and copying the text.  Shown after a failed attempt to write text to clipboard.",
      "message": "Copy failed.  Try manually selecting and copying the text."
   },
   "copySuccessText": {
      "description": "Copied successfully!  Shows after a successful text copy to clipboard.",
      "message": "Copied successfully!"
   },
   "copyToClipboardText": {
      "description": "Copy to Clipboard.  Shown in a button to take action upon click.",
      "message": "Copy to Clipboard"
   },
   "createDefaultExpressionOptionsText": {
      "description": "Create Default Expression Options. Used in 'List of Expressions'",
      "message": "Create Default Expression Options"
   },
   "currentContainerInfo": {
      "description": "Current Container Selected: $ID$ ( $Name ). Found in List of Expressions only if Firefox containers enabled.",
      "message": "Current Container Selected: $ID$ ( $Name$ )",
      "placeholders": {
         "ID": {
            "content": "$1",
            "example": "firefox-container-1"
         },
         "Name": {
            "content": "$2",
            "example": "Personal (whatever the user has named the container) - or - translated version of 'Invalid Container'"
         }
      }
   },
   "debugMode": {
      "description": "Enable Debug Mode (Additional Console Outputs). Found in CAD Settings.",
      "message": "Enable Debug Mode (Additional Console Outputs)"
   },
   "debugTitle": {
      "description": "Debug Information.  Header shown on About page.",
      "message": "Debug Information"
   },
   "defaultContainerText": {
      "description": "No Container. This will be in brackets. Used in List of Expression in Firefox for Default / No Container",
      "message": "No Container"
   },
   "defaultSettingsText": {
      "description": "Restore Default Settings",
      "message": "Restore Default Settings"
   },
   "defaultText": {
      "description": "Default. Used in List of Expression in Firefox for Default / No Container.",
      "message": "Default"
   },
   "disableAutoDeleteText": {
      "description": "Toggle to disable automatic cleanup (manual mode)",
      "message": "Toggle to disable automatic cleanup (manual mode)"
   },
   "documentationText": {
      "description": "Documentation",
      "message": "Documentation"
   },
   "domainExpressionsText": {
      "description": "Domain Expression",
      "message": "Domain Expression"
   },
   "domainPlaceholderText": {
      "description": "Domain Expression Example. For this one we'll keep the string as is.  Kept for historical purposes.",
      "message": "example.com, subdomain.example.com, *.example.com, /(^|.)example\\.com/"
   },
   "dropdownAdditionalCleaningOptions": {
      "description": "(Screen-readers only) - Toggle Additional Cleaning Actions Dropdown",
      "message": "Toggle Additional Cleaning Actions Dropdown"
   },
   "editExpressionText": {
      "description": "Edit expression",
      "message": "Edit expression"
   },
   "enableAutoDeleteText": {
      "description": "Toggle to enable automatic cleanup (automatic mode)",
      "message": "Toggle to enable automatic cleanup (automatic mode)"
   },
   "enableCleanupLogText": {
      "description": "Enable Cleanup Log and Counter",
      "message": "Enable Cleanup Log and Counter"
   },
   "enableContextMenus": {
      "description": "Enable Context Menus (Right-Click Menu). Shown in CAD Settings",
      "message": "Enable Context Menus (Right-Click Menu)"
   },
   "enableGreyListCleanup": {
      "description": "Enable Greylist Cleanup on Browser Restart",
      "message": "Enable Greylist Cleanup on Browser Restart"
   },
   "enableNewVersionPopup": {
      "description": "Enable Popup when New Version is Released",
      "message": "Enable Popup when New Version is Released"
   },
   "errorText": {
      "description": "Error!",
      "message": "Error!"
   },
   "exportSettingsText": {
      "description": "Export Core Settings... Found in CAD Settings.",
      "message": "Export Core Settings..."
   },
   "exportTitleTimestamp": {
      "description": "A timestamp will be appended to the filename on export.",
      "message": "A timestamp will be appended to the filename on export."
   },
   "exportURLSText": {
      "description": "Export Expressions... Found in List of Expressions.",
      "message": "Export Expressions..."
   },
   "expressionListText": {
      "description": "List of Expressions",
      "message": "List of Expressions"
   },
   "extensionDescription": {
      "description": "Control your cookies! Automatically delete unwanted cookies from your closed tabs while keeping the ones you want.",
      "message": "Control your cookies! Automatically delete unwanted cookies from your closed tabs while keeping the ones you want."
   },
   "extensionName": {
      "description": "Name of the extension.",
      "message": "Cookie AutoDelete"
   },
   "faqText": {
      "description": "Frequently Asked Questions, Common issues and solutions",
      "message": "Frequently Asked Questions, Common issues and solutions"
   },
   "filterDebugMode": {
      "description": "To see only debug outputs by this extension, filter output by the following line. Found after enabling debug mode.",
      "message": "To see only debug outputs by this extension, filter output by the following line:"
   },
   "filterText": {
      "description": "Filter",
      "message": "Filter"
   },
   "greyListWordText": {
      "description": "Greylist",
      "message": "Greylist"
   },
   "groupExpressionDefaultNotice": {
      "description": "Looking to set default expression options for new expressions?  It has been enhanced to be an expression option itself!  Visit $listExpression$ to get started!  Shown in Settings",
      "message": "Looking to set default expression options for new expressions?  It has been enhanced to be an expression option itself!  Visit $listExpression$ to get started!",
      "placeholders": {
         "listExpression": {
            "content": "$1",
            "example": "List of Expressions \u003C- the translated version"
         }
      }
   },
   "importCoreSettingsFailed": {
      "description": "Import Core Settings Failed - Found unknown setting",
      "message": "Import Core Settings Failed - Found unknown setting"
   },
   "importCoreSettingsText": {
      "description": "Import Core Settings... Found in CAD Settings.",
      "message": "Import Core Settings..."
   },
   "importFileNotFound": {
      "description": "File not found: $filename$.  Found in List of Expressions and CAD Settings.",
      "message": "File not found: $filename$",
      "placeholders": {
         "filename": {
            "content": "$1",
            "example": "filename.json"
         }
      }
   },
   "importFileTypeInvalid": {
      "description": "File given is not a type we handle",
      "message": "File given is not a type we handle"
   },
   "importFileValidationFailed": {
      "description": "File given failed validation",
      "message": "File given failed validation"
   },
   "importInvalidExpressions": {
      "description": "Detected invalid expression(s) from file import. They are noted below with its reason. Check and fix any errors in that file and try importing again. Found in List of Expressions when imported file as expressions that aren't valid.",
      "message": "Detected invalid expression(s) from file import. They are noted below with its reason. Check and fix any errors in that file and try importing again."
   },
   "importListNotArray": {
      "description": "$identifier$ is not formatted as an array list.  Found in List of Expressions during import validation.",
      "message": "$identifier$ is not formatted as an array list.",
      "placeholders": {
         "identifier": {
            "content": "$1",
            "example": "jsonObjectKey"
         }
      }
   },
   "importMissingKey": {
      "description": "Missing identifier",
      "message": "Missing identifier"
   },
   "importURLSText": {
      "description": "Import Expressions... Found in List of Expressions.",
      "message": "Import Expressions..."
   },
   "importValidExpressions": {
      "description": "Successfully added $num$ expression(s) from imported file: $filename$.  Found in List of Expressions after successful valid expressions from import.",
      "message": "Successfully added $num$ expression(s) from imported file: $filename$.",
      "placeholders": {
         "filename": {
            "content": "$2",
            "example": "filename.json"
         },
         "num": {
            "content": "$1",
            "example": "5"
         }
      }
   },
   "indexedDBCleanupText": {
      "description": "Enable IndexedDB Cleanup (Firefox 77+, Chrome 74+). Found in CAD Settings.",
      "message": "Enable IndexedDB Cleanup (Firefox 77+, Chrome 74+)"
   },
   "indexedDBText": {
      "description": "IndexedDB. Primarily used in notifications.",
      "message": "IndexedDB"
   },
   "inputAddSuccess": {
      "description": "Successfully added $num$ expression(s) to $listType$ Type in the currently active list.  Found in List of Expressions after successful inputs.",
      "message": "Successfully added $num$ expression(s) with $listType$ Type in the currently active list.",
      "placeholders": {
         "listType": {
            "content": "$2",
            "example": "GreyList"
         },
         "num": {
            "content": "$1",
            "example": "5"
         }
      }
   },
   "inputErrorComma": {
      "description": "Commas are only allowed in Regular Expressions. Found in editing expression errors.",
      "message": "Commas are only allowed in Regular Expressions."
   },
   "inputErrorEmpty": {
      "description": "Revised expression cannot be empty!  Found in editing expression errors.",
      "message": "Revised expression cannot be empty!"
   },
   "inputErrorRegExp": {
      "description": "Regular Expression is not valid. \u003CError from new RegExp()>. Found in editing expression errors.",
      "message": "Regular Expression is not valid. $RegexError$",
      "placeholders": {
         "RegexError": {
            "content": "$1",
            "example": "SyntaxError:  unterminated character class."
         }
      }
   },
   "inputErrorSlashEndMissingStart": {
      "description": "End slash detected, but missing start slash for Regular Expression. Remove end slash for domains. Found in editing expression errors.",
      "message": "End slash detected, but missing start slash for Regular Expression. Remove end slash for domains."
   },
   "inputErrorSlashStartMissingEnd": {
      "description": "Start slash detected, but missing end slash for Regular Expression. Found in editing expression errors.",
      "message": "Start slash detected, but missing end slash for Regular Expression."
   },
   "inputErrorSpace": {
      "description": "Spaces are not allowed in hostnames. Found in editing expression errors.",
      "message": "Spaces are not allowed in hostnames."
   },
   "invalidNewExpressions": {
      "description": "Detected invalid new expression(s). They are noted below with its reason and have been kept above for editing. Found in List of Expressions Settings Page.",
      "message": "Detected invalid new expression(s). They are noted below with its reason and have been kept above for editing."
   },
   "keepAllCookiesGreyText": {
      "description": "Keep All Cookies until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep All Cookies until restart"
   },
   "keepAllCookiesText": {
      "description": "Keep All Cookies. Found in Expression Options. For Whitelist entries.",
      "message": "Keep All Cookies"
   },
   "keepCacheGreyText": {
      "description": "Keep Cache until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep Cache until restart"
   },
   "keepCacheText": {
      "description": "Keep Cache. Found in Expression Options. For Whitelist entries.",
      "message": "Keep Cache"
   },
   "keepDefaultIcon": {
      "description": "Keep Default Icons on all list types. Disabled: keep blue icon, grey for automatic cleaning disabled. Enabled: red/yellow/blue depending on matching expressions in list.",
      "message": "Keep Default Icons on all list types"
   },
   "keepIndexedDBGreyText": {
      "description": "Keep IndexedDB until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep IndexedDB until restart"
   },
   "keepIndexedDBText": {
      "description": "Keep IndexedDB. Found in Expression Options. For Whitelist entries.",
      "message": "Keep IndexedDB"
   },
   "keepLocalstorageGreyText": {
      "description": "Keep LocalStorage until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep LocalStorage until restart"
   },
   "keepLocalstorageText": {
      "description": "Keep LocalStorage. Found in Expression Options. For Whitelist entries.",
      "message": "Keep LocalStorage"
   },
   "keepPluginDataGreyText": {
      "description": "Keep Plugin Data until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep Plugin Data until restart"
   },
   "keepPluginDataText": {
      "description": "Keep Plugin Data. Found in Expression Options. For Whitelist entries.",
      "message": "Keep Plugin Data"
   },
   "keepServiceWorkersGreyText": {
      "description": "Keep Service Workers until restart. Found in Expression Options. For Greylist entries.",
      "message": "Keep Service Workers until restart"
   },
   "keepServiceWorkersText": {
      "description": "Keep Service Workers. Found in Expression Options. For Whitelist entries.",
      "message": "Keep Service Workers"
   },
   "keepText": {
      "description": "Keep",
      "message": "Keep"
   },
   "listTypeText": {
      "description": "List Type",
      "message": "List Type"
   },
   "localStorageCleanupText": {
      "description": "Enable LocalStorage Cleanup (Firefox 58+, Chrome 74+). Found in CAD Settings.",
      "message": "Enable LocalStorage Cleanup (Firefox 58+, Chrome 74+)"
   },
   "localStorageText": {
      "description": "LocalStorage. Primarily used in notifications.",
      "message": "LocalStorage"
   },
   "manualActionNotification": {
      "description": "Manual Action Notification - used as Notification Title.",
      "message": "Manual Action Notification"
   },
   "manualCleanError": {
      "description": "$siteData$ cannot be cleaned for tab:. Shown as notification if manual clean cookies cannot be done.",
      "message": "$siteData$ cannot be cleaned for tab:",
      "placeholders": {
         "siteData": {
            "content": "$1",
            "example": "Cookies"
         }
      }
   },
   "manualCleanNothing": {
      "description": "No $siteData$ were found for cleaning on $url$. Used in notification after manual clean.",
      "message": "No $siteData$ were found for cleaning on $url$.",
      "placeholders": {
         "siteData": {
            "content": "$1",
            "example": "Cookies"
         },
         "url": {
            "content": "$2",
            "example": "example.com"
         }
      }
   },
   "manualCleanRemoved": {
      "description": "Removed $deleted$ of $total$. Used as part of success notification on manual clean.",
      "message": "Removed $deleted$ of $total$.",
      "placeholders": {
         "deleted": {
            "content": "$1",
            "example": "5"
         },
         "total": {
            "content": "$2",
            "example": "5"
         }
      }
   },
   "manualCleanSiteDataAll": {
      "description": "Clean All for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean All for this domain"
   },
   "manualCleanSiteDataAllDomain": {
      "description": "Clear all site data for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all site data for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataCache": {
      "description": "Clean Cache for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean Cache for this domain"
   },
   "manualCleanSiteDataCacheDomain": {
      "description": "Clear all Cache for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all Cache for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataCookies": {
      "description": "Clean Cookies for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean Cookies for this domain"
   },
   "manualCleanSiteDataCookiesDomain": {
      "description": "Clear all Cookies for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all Cookies for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataIndexedDB": {
      "description": "Clean IndexedDB for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean IndexedDB for this domain"
   },
   "manualCleanSiteDataIndexedDBDomain": {
      "description": "Clear all IndexedDB for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all IndexedDB for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataLocalStorage": {
      "description": "Clean LocalStorage for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean LocalStorage for this domain"
   },
   "manualCleanSiteDataLocalStorageDomain": {
      "description": "Clear all LocalStorage for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all LocalStorage for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataPluginData": {
      "description": "Clean Plugin Data for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean Plugin Data for this domain"
   },
   "manualCleanSiteDataPluginDataDomain": {
      "description": "Clear all Plugin Data for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all Plugin Data for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSiteDataServiceWorkers": {
      "description": "Clean Service Workers for this domain. Found in Popup clean dropdown menu.",
      "message": "Clean Service Workers for this domain"
   },
   "manualCleanSiteDataServiceWorkersDomain": {
      "description": "Clear all Service Workers for $domain$. Found in Popup clean dropdown menu as mouseover.",
      "message": "Clear all Service Workers for $domain$",
      "placeholders": {
         "domain": {
            "content": "$1",
            "example": "example.com"
         }
      }
   },
   "manualCleanSuccess": {
      "description": "Cleanup for $siteData$ on $url$ result:  Shown as notification after successful manual cleaning.",
      "message": "Cleanup for $siteData$ on $url$ result:",
      "placeholders": {
         "siteData": {
            "content": "$1",
            "example": "Cookies"
         },
         "url": {
            "content": "$2",
            "example": "example.com"
         }
      }
   },
   "manualNotificationsText": {
      "description": "Show Notification from Manual Site Data Cleanups. Found in settings",
      "message": "Show Notification from Manual Site Data Cleanups"
   },
   "matchedDomainExpressionText": {
      "description": "Matched Domain Expression",
      "message": "Matched Domain Expression"
   },
   "menuText": {
      "description": "Menu. Only shown when the settings screen is small / when the hamburger icon shows / when the menu is collapsed.",
      "message": "Menu"
   },
   "minutesText": {
      "description": "minute(s)",
      "message": "minute(s)"
   },
   "missingContainerText": {
      "description": "INVALID CONTAINER. Shown when a CAD list exists but cannot link id to available containers (Firefox).",
      "message": "INVALID CONTAINER"
   },
   "noCleanupLogText": {
      "description": "No Cleanup Logs Found",
      "message": "No Cleanup Logs Found"
   },
   "noExpressionsText": {
      "description": "No expressions defined.",
      "message": "No expressions defined."
   },
   "noPrivateLogging": {
      "description": "Cleanup Logs will not be generated for tabs in Private Browsing / Incognito / InPrivate.",
      "message": "Cleanup Logs will not be generated for tabs in Private Browsing / Incognito / InPrivate."
   },
   "noRulesText": {
      "description": "No rules matched this domain",
      "message": "No rules matched this domain."
   },
   "noSearchExpressionsFound": {
      "description": "No expressions found from search above.  Found in List of Expressions.",
      "message": "No expressions found from search above."
   },
   "noneText": {
      "description": "None",
      "message": "None"
   },
   "notificationContent": {
      "description": "Some site data, including 123 Cookie(s), removed from 8 domain(s), including: google.com, facebook.com",
      "message": "Some site data, including $Num$ Cookie(s), removed from $total$ domain(s), including: $Websites$",
      "placeholders": {
         "num": {
            "content": "$1",
            "example": "123"
         },
         "total": {
            "content": "$2",
            "example": "8"
         },
         "websites": {
            "content": "$3",
            "example": "google.com, facebook.com"
         }
      }
   },
   "notificationDisabledText": {
      "description": "Notification disabled",
      "message": "Notification disabled"
   },
   "notificationEnabledText": {
      "description": "Notification enabled",
      "message": "Notification enabled"
   },
   "notificationTitle": {
      "description": "Cookies were deleted!  Used in Notification Title.",
      "message": "Cookies were deleted!"
   },
   "notificationTitleSiteData": {
      "description": "Site Data Removal Triggered!  Used in Notification Title.",
      "message": "Site Data Removal Triggered!"
   },
   "notifyCookieCleanUpText": {
      "description": "Show Notification After Automatic Cleanup. Found in settings.",
      "message": "Show Notification After Automatic Cleanup"
   },
   "notifyCookieCleanupDelayText": {
      "description": "Duration for Notifications",
      "message": "Duration for Notifications"
   },
   "oldReleasesText": {
      "description": "Older release notes can be viewed online at",
      "message": "Older release notes can be viewed online at"
   },
   "openDebugMode": {
      "description": "To view the debug outputs, open a new tab and visit",
      "message": "To view the debug outputs, open a new tab and visit"
   },
   "optionsText": {
      "description": "Options",
      "message": "Options"
   },
   "pluginDataCleanupText": {
      "description": "Enable Plugin Data Cleanup (Firefox 78+, Chrome 74+). Found in CAD Settings.",
      "message": "Enable Plugin Data Cleanup (Firefox 78+, Chrome 74+)"
   },
   "pluginDataText": {
      "description": "Plugin Data. Primarily used in notifications.",
      "message": "Plugin Data"
   },
   "popupCookieCountText": {
      "description": "Cookies. Due to visual formatting, Cookie Count will always be located on the right side after the colon. Found in Popup near top-right.",
      "message": "Cookies"
   },
   "preferencesText": {
      "description": "Settings",
      "message": "Settings"
   },
   "questionExpression": {
      "description": "How do Expressions work?",
      "message": "How do Expressions work?"
   },
   "reasonCADSiteDataCookie": {
      "description": "Clean to trigger Site Data cleaning for $hostname$. Found in Activity Log Detailed Entries.",
      "message": "Clean to trigger Site Data cleaning for $hostname$.",
      "placeholders": {
         "hostname": {
            "content": "$1",
            "placeholder": "example.com"
         }
      }
   },
   "reasonCADSiteDataCookieRestart": {
      "description": "Clean to trigger Site Data cleaning for $hostname$ on restart. Found in Activity Log Detailed Entries.",
      "message": "Clean to trigger Site Data cleaning for $hostname$ on restart.",
      "placeholders": {
         "hostname": {
            "content": "$1",
            "placeholder": "example.com"
         }
      }
   },
   "reasonCleanCookieExpired": {
      "description": "Partial clean because of expired cookies from $hostname$.",
      "message": "Partial clean because of expired cookies from $hostname$.",
      "placeholders": {
         "hostname": {
            "content": "$1",
            "placeholder": "sub.domain.com"
         }
      }
   },
   "reasonCleanCookieName": {
      "description": "Partial clean because of matched $matchedExpression$ in the $listType$. Used in cleanup logs.",
      "message": "Partial clean because of matched $matchedExpression$ in the $listType$",
      "placeholders": {
         "listType": {
            "content": "$2",
            "example": "Whitelist"
         },
         "matchedExpression": {
            "content": "$1",
            "example": "*.google.com"
         }
      }
   },
   "reasonCleanGreyList": {
      "description": "Clean because of startup cleanup and $matchedExpression$ is in the Greylist. Used in cleanup log.",
      "message": "Clean because of startup cleanup and $matchedExpression$ is in the Greylist",
      "placeholders": {
         "matchedExpression": {
            "content": "$1",
            "example": "*.google.com"
         }
      }
   },
   "reasonCleanNoList": {
      "description": "Clean because $hostname$ is not in the White or Grey lists",
      "message": "Clean because $hostname$ is not in the White or Grey lists",
      "placeholders": {
         "hostname": {
            "content": "$1",
            "example": "sub.google.com"
         }
      }
   },
   "reasonCleanStartupNoList": {
      "description": "Clean because of startup cleanup and $hostname$ is not in the White or Grey lists",
      "message": "Clean because of startup cleanup and $hostname$ is not in the White or Grey lists",
      "placeholders": {
         "hostname": {
            "content": "$1",
            "example": "sub.google.com"
         }
      }
   },
   "reasonKeep": {
      "description": "Keep because of matched $matchedExpression$ in the $listType$",
      "message": "Keep because of matched $matchedExpression$ in the $listType$",
      "placeholders": {
         "listType": {
            "content": "$2",
            "example": "Whitelist"
         },
         "matchedExpression": {
            "content": "$1",
            "example": "*.google.com"
         }
      }
   },
   "reasonKeepOpenTab": {
      "description": "Keep because of open tabs of *.$mainDomain$",
      "message": "Keep because of open tabs of *.$mainDomain$",
      "placeholders": {
         "mainDomain": {
            "content": "$1",
            "example": "google.com"
         }
      }
   },
   "reasonTabsWereIgnored": {
      "description": "[Clean because of sub.google.com is not in the White or Grey lists] and also open tabs were ignored",
      "message": "and also open tabs were ignored"
   },
   "reasonTabsWereNotIgnored": {
      "description": "[Clean because of sub.google.com is not in the White or Grey lists] or in any open tabs",
      "message": "or in any open tabs"
   },
   "releaseNotesText": {
      "description": "Release Notes",
      "message": "Release Notes"
   },
   "removeActivityLogEntryText": {
      "description": "Remove Log Entry. Shown in summary activity log for individual log removal.",
      "message": "Remove Log Entry"
   },
   "removeAllExpressions": {
      "description": "Remove All Expressions",
      "message": "Remove All Expressions"
   },
   "removeAllExpressionsConfirm": {
      "description": "Are you sure you want to remove ALL ($expressionCount$) saved expression(s) from ($listCount$) list(s)?\n\nTHIS CANNOT BE UNDONE!\n\nType [ $expressionCount$ ] and click OK to delete. Popup prompt if Delete All Expression is clicked.",
      "message": "Are you sure you want to remove ALL ($expressionCount$) saved expression(s) from ($listCount$) list(s)?\n\nTHIS CANNOT BE UNDONE!\n\nType [ $expressionCount$ ] and click OK to delete.",
      "placeholders": {
         "expressionCount": {
            "content": "$1",
            "example": "75"
         },
         "listCount": {
            "content": "$2",
            "example": "5"
         }
      }
   },
   "removeAllExpressionsNoneFound": {
      "description": "No expressions to remove!",
      "message": "No expressions to remove!"
   },
   "removeExpressionText": {
      "description": "Remove expression",
      "message": "Remove expression"
   },
   "removeListText": {
      "description": "Remove All Expressions from Selected List. Shown in List of Expressions, only on Firefox and if containers/contextual identities is enabled.",
      "message": "Remove All Expressions from Selected List"
   },
   "removeStorageCount": {
      "description": "Removed $count$ item(s) from $storageType$. Used in manual localstorage clean notification.",
      "message": "Removed $count$ item(s) from $storageType$.",
      "placeholders": {
         "count": {
            "content": "$1",
            "example": "1"
         },
         "storageType": {
            "content": "$2",
            "example": "LocalStorage"
         }
      }
   },
   "reportIssuesText": {
      "description": "Report issues and suggest features",
      "message": "Report issues and suggest features"
   },
   "resetCookieCounterText": {
      "description": "Reset Cookie Counters. Button in Welcome Page.",
      "message": "Reset Cookie Counters"
   },
   "resetExtensionDataText": {
      "description": "Reset Extension Data",
      "message": "Reset Extension Data"
   },
   "restoreText": {
      "description": "Restore. Restores cookies that was cleaned up by this extension. Found in Activity Log entries.",
      "message": "Restore"
   },
   "reviewLinkMessage": {
      "description": "Thanks for trying out Cookie AutoDelete. If you liked it, then please give a review.",
      "message": "Thanks for trying out $cadTitle$. If you liked it, then please give a review.",
      "placeholders": {
         "cadTitle": {
            "content": "$1",
            "example": "Cookie AutoDelete"
         }
      }
   },
   "saveExpressionText": {
      "description": "Save expression",
      "message": "Save expression"
   },
   "secondsText": {
      "description": "second(s)",
      "message": "second(s)"
   },
   "serviceWorkersCleanupText": {
      "description": "Enable Service Workers Cleanup (Firefox 77+, Chrome 74+). Found in CAD Settings.",
      "message": "Enable Service Workers Cleanup (Firefox 77+, Chrome 74+)"
   },
   "serviceWorkersText": {
      "description": "Service Workers. Primarily used in notifications.",
      "message": "Service Workers"
   },
   "sessionStorageText": {
      "description": "SessionStorage. Used in manual localstorage clean notification",
      "message": "SessionStorage"
   },
   "settingGroupAutoClean": {
      "description": "Automatic Cleaning Options",
      "message": "Automatic Cleaning Options"
   },
   "settingGroupExpression": {
      "description": "Expression Options",
      "message": "Expression Options"
   },
   "settingGroupExtension": {
      "description": "Extension Options",
      "message": "Extension Options"
   },
   "settingGroupOtherBrowsing": {
      "description": "Other Browsing Data Cleanup Options",
      "message": "Other Browsing Data Cleanup Options"
   },
   "settingsText": {
      "description": "$CAD$ Settings",
      "message": "$CAD$ Settings",
      "placeholders": {
         "CAD": {
            "content": "CAD",
            "example": "CAD - Short form of Cookie AutoDelete"
         }
      }
   },
   "showNumberOfCookiesInIconText": {
      "description": "Show Number of Cookies for that Domain over the Icon",
      "message": "Show Number of Cookies for that Domain over the Icon"
   },
   "siteDataText": {
      "description": "Site Data. Found in Activity Log Summary and Notifications.",
      "message": "Site Data"
   },
   "sizePopupText": {
      "description": "Size of Popup (in px). This sets the font size in the Popup.",
      "message": "Size of Popup (in px)"
   },
   "sizeSettingText": {
      "description": "Size of Setting Pages (in px). This sets the font size in the Setting Pages.",
      "message": "Size of Setting Pages (in px)"
   },
   "stopEditingText": {
      "description": "Stop editing",
      "message": "Stop editing"
   },
   "successText": {
      "description": "Success!",
      "message": "Success!"
   },
   "toGreyListText": {
      "description": "Add to Greylist (Clean on Browser Restart)",
      "message": "Add to Greylist (Clean on Browser Restart)"
   },
   "toWhiteListText": {
      "description": "Add to Whitelist (Never Clean)",
      "message": "Add to Whitelist (Never Clean)"
   },
   "toggleNotificationText": {
      "description": "Toggle to enable or disable notifications",
      "message": "Toggle to enable or disable notifications"
   },
   "toggleToGreyListWordText": {
      "description": "Toggle to greylist",
      "message": "Toggle to greylist"
   },
   "toggleToWhiteListWordText": {
      "description": "Toggle to whitelist",
      "message": "Toggle to whitelist"
   },
   "versionNumberText": {
      "description": "$CAD$ version 3.2.1. The actual number is formatted differently and will be right below this text.",
      "message": "$CAD$ version",
      "placeholders": {
         "CAD": {
            "content": "$1",
            "example": "CAD or Cookie AutoDelete"
         }
      }
   },
   "versionText": {
      "description": "Firefox version",
      "message": "$browser$ version",
      "placeholders": {
         "browser": {
            "content": "$1",
            "example": "Firefox"
         }
      }
   },
   "welcomeMessage": {
      "description": "Hi there! During this session, Cookie AutoDelete has deleted 123 cookies and in total 456 cookies.",
      "message": "Hi there! During this session, $cadTitle$ has deleted $sessionDeleted$ cookies and in total $totalDeleted$ cookies.",
      "placeholders": {
         "cadTitle": {
            "content": "$1",
            "example": "Cookie AutoDelete"
         },
         "sessionDeleted": {
            "content": "$2",
            "example": "123"
         },
         "totalDeleted": {
            "content": "$3",
            "example": "456"
         }
      }
   },
   "welcomeText": {
      "description": "Welcome",
      "message": "Welcome"
   },
   "whiteListWordText": {
      "description": "Whitelist",
      "message": "Whitelist"
   }
}
